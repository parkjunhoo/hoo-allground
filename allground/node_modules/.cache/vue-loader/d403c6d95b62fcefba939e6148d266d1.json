{"remainingRequest":"C:\\Users\\lol\\Desktop\\myproject\\server\\allground\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\lol\\Desktop\\myproject\\server\\allground\\src\\views\\Apply.vue?vue&type=template&id=50843ab8&scoped=true&","dependencies":[{"path":"C:\\Users\\lol\\Desktop\\myproject\\server\\allground\\src\\views\\Apply.vue","mtime":1620794361450},{"path":"C:\\Users\\lol\\Desktop\\myproject\\server\\allground\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\lol\\Desktop\\myproject\\server\\allground\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\lol\\Desktop\\myproject\\server\\allground\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\lol\\Desktop\\myproject\\server\\allground\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}