{"remainingRequest":"C:\\Users\\lol\\Desktop\\server\\allground\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\lol\\Desktop\\server\\allground\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\lol\\Desktop\\server\\allground\\node_modules\\vuetify\\lib\\mixins\\bootable\\index.js","dependencies":[{"path":"C:\\Users\\lol\\Desktop\\server\\allground\\node_modules\\vuetify\\lib\\mixins\\bootable\\index.js","mtime":1619014118507},{"path":"C:\\Users\\lol\\Desktop\\server\\allground\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1617667255123},{"path":"C:\\Users\\lol\\Desktop\\server\\allground\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1617667255123},{"path":"C:\\Users\\lol\\Desktop\\server\\allground\\node_modules\\babel-loader\\lib\\index.js","mtime":1617667255120}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLmRlZmF1bHQgPSB2b2lkIDA7Cgp2YXIgX2NvbnNvbGUgPSByZXF1aXJlKCIuLi8uLi91dGlsL2NvbnNvbGUiKTsKCnZhciBfdnVlID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKCJ2dWUiKSk7CgpmdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfQoKLy8gVXRpbGl0aWVzCi8vIFR5cGVzCgovKioKICogQm9vdGFibGUKICogQG1peGluCiAqCiAqIFVzZWQgdG8gYWRkIGxhenkgY29udGVudCBmdW5jdGlvbmFsaXR5IHRvIGNvbXBvbmVudHMKICogTG9va3MgZm9yIGNoYW5nZSBpbiAiaXNBY3RpdmUiIHRvIGF1dG9tYXRpY2FsbHkgYm9vdAogKiBPdGhlcndpc2UgY2FuIGJlIHNldCBtYW51YWxseQogKi8KCi8qIEB2dWUvY29tcG9uZW50ICovCnZhciBfZGVmYXVsdCA9IF92dWUuZGVmYXVsdC5leHRlbmQoKS5leHRlbmQoewogIG5hbWU6ICdib290YWJsZScsCiAgcHJvcHM6IHsKICAgIGVhZ2VyOiBCb29sZWFuCiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgaXNCb290ZWQ6IGZhbHNlCiAgICB9OwogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIGhhc0NvbnRlbnQ6IGZ1bmN0aW9uIGhhc0NvbnRlbnQoKSB7CiAgICAgIHJldHVybiB0aGlzLmlzQm9vdGVkIHx8IHRoaXMuZWFnZXIgfHwgdGhpcy5pc0FjdGl2ZTsKICAgIH0KICB9LAogIHdhdGNoOiB7CiAgICBpc0FjdGl2ZTogZnVuY3Rpb24gaXNBY3RpdmUoKSB7CiAgICAgIHRoaXMuaXNCb290ZWQgPSB0cnVlOwogICAgfQogIH0sCiAgY3JlYXRlZDogZnVuY3Rpb24gY3JlYXRlZCgpIHsKICAgIC8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICovCiAgICBpZiAoJ2xhenknIGluIHRoaXMuJGF0dHJzKSB7CiAgICAgICgwLCBfY29uc29sZS5yZW1vdmVkKSgnbGF6eScsIHRoaXMpOwogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgc2hvd0xhenlDb250ZW50OiBmdW5jdGlvbiBzaG93TGF6eUNvbnRlbnQoY29udGVudCkgewogICAgICByZXR1cm4gdGhpcy5oYXNDb250ZW50ICYmIGNvbnRlbnQgPyBjb250ZW50KCkgOiBbdGhpcy4kY3JlYXRlRWxlbWVudCgpXTsKICAgIH0KICB9Cn0pOwoKZXhwb3J0cy5kZWZhdWx0ID0gX2RlZmF1bHQ7"},{"version":3,"sources":["../../../src/mixins/bootable/index.ts"],"names":[],"mappings":";;;;;;;AACA;;AAGA;;;;AAJA;AAGA;;AAMA;;;;;;;;;AAQA;eACe,aAAA,MAAA,GAAA,MAAA,CAAsC;AACnD,EAAA,IAAI,EAD+C,UAAA;AAGnD,EAAA,KAAK,EAAE;AACL,IAAA,KAAK,EAAE;AADF,GAH4C;AAOnD,EAAA,IAAI,EAAE;AAAA,WAAO;AACX,MAAA,QAAQ,EAAE;AADC,KAAP;AAAA,GAP6C;AAWnD,EAAA,QAAQ,EAAE;AACR,IAAA,UADQ,wBACE;AACR,aAAO,KAAA,QAAA,IAAiB,KAAjB,KAAA,IAA+B,KAAtC,QAAA;AACD;AAHO,GAXyC;AAiBnD,EAAA,KAAK,EAAE;AACL,IAAA,QADK,sBACG;AACN,WAAA,QAAA,GAAA,IAAA;AACD;AAHI,GAjB4C;AAuBnD,EAAA,OAvBmD,qBAuB5C;AACL;AACA,QAAI,UAAU,KAAd,MAAA,EAA2B;AACzB,4BAAO,MAAP,EAAA,IAAA;AACD;AA3BgD,GAAA;AA8BnD,EAAA,OAAO,EAAE;AACP,IAAA,eADO,2BACQ,OADR,EACiC;AACtC,aAAQ,KAAA,UAAA,IAAD,OAAC,GAA8B,OAA/B,EAAC,GAA0C,CAAC,KAAnD,cAAmD,EAAD,CAAlD;AACD;AAHM;AA9B0C,CAAtC,C","sourcesContent":["// Utilities\nimport { removed } from '../../util/console'\n\n// Types\nimport Vue, { VNode } from 'vue'\ninterface Toggleable extends Vue {\n  isActive?: boolean\n}\n\n/**\n * Bootable\n * @mixin\n *\n * Used to add lazy content functionality to components\n * Looks for change in \"isActive\" to automatically boot\n * Otherwise can be set manually\n */\n/* @vue/component */\nexport default Vue.extend<Vue & Toggleable>().extend({\n  name: 'bootable',\n\n  props: {\n    eager: Boolean,\n  },\n\n  data: () => ({\n    isBooted: false,\n  }),\n\n  computed: {\n    hasContent (): boolean | undefined {\n      return this.isBooted || this.eager || this.isActive\n    },\n  },\n\n  watch: {\n    isActive () {\n      this.isBooted = true\n    },\n  },\n\n  created () {\n    /* istanbul ignore next */\n    if ('lazy' in this.$attrs) {\n      removed('lazy', this)\n    }\n  },\n\n  methods: {\n    showLazyContent (content?: () => VNode[]): VNode[] {\n      return (this.hasContent && content) ? content() : [this.$createElement()]\n    },\n  },\n})\n"],"sourceRoot":""}]}