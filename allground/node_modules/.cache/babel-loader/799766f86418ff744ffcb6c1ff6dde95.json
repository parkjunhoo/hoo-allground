{"remainingRequest":"C:\\Users\\lol\\Desktop\\server\\allground\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\lol\\Desktop\\server\\allground\\node_modules\\vuetify\\lib\\services\\theme\\utils.js","dependencies":[{"path":"C:\\Users\\lol\\Desktop\\server\\allground\\node_modules\\vuetify\\lib\\services\\theme\\utils.js","mtime":1619014118507},{"path":"C:\\Users\\lol\\Desktop\\server\\allground\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1617667255123},{"path":"C:\\Users\\lol\\Desktop\\server\\allground\\node_modules\\babel-loader\\lib\\index.js","mtime":1617667255120}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["../../../src/services/theme/utils.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;AAMM,SAAA,KAAA,CAAA,KAAA,EAGa;AAAA,MADjB,MACiB,uEAHb,KAGa;AAAA,MAAjB,UAAiB,uEAHb,IAGa;;AAEjB,MAAM,MAAN,GAAA,KAAA,CAAM,MAAN;AAAA,MAAmB,OAAnB,4BAAA,KAAA;;AACA,MAAM,MAAM,GAAG,MAAM,CAAN,IAAA,CAAf,OAAe,CAAf;AACA,MAAM,WAAW,GAAjB,EAAA;;AAEA,OAAK,IAAI,CAAC,GAAV,CAAA,EAAgB,CAAC,GAAG,MAAM,CAA1B,MAAA,EAAmC,EAAnC,CAAA,EAAwC;AACtC,QAAM,IAAI,GAAG,MAAM,CAAnB,CAAmB,CAAnB;AACA,QAAM,KAAK,GAAG,KAAK,CAAnB,IAAmB,CAAnB;AAEA,QAAI,KAAK,IAAT,IAAA,EAAmB;;AAEnB,QAAI,CAAJ,UAAA,EAAiB;AACf,MAAA,WAAW,CAAX,IAAW,CAAX,GAAoB;AAAE,QAAA,IAAI,EAAE,0BAAS,4BAAD,KAAC,CAAT;AAAR,OAApB;AADF,KAAA,MAEO,IAAA,MAAA,EAAY;AACjB;AACA,UAAI,IAAI,KAAJ,MAAA,IAAmB,IAAI,CAAJ,UAAA,CAAnB,SAAmB,CAAnB,IAAiD,IAAI,CAAJ,UAAA,CAArD,QAAqD,CAArD,EAAgF;AAC9E,QAAA,WAAW,CAAX,IAAW,CAAX,GAAoB,4BAApB,KAAoB,CAApB;AACD;AAJI,KAAA,MAKA,IAAI,QAAA,KAAA,MAAJ,QAAA,EAA+B;AACpC,MAAA,WAAW,CAAX,IAAW,CAAX,GAAoB,KAAK,CAAA,KAAA,EAAA,IAAA,EAAzB,UAAyB,CAAzB;AADK,KAAA,MAEA;AACL,MAAA,WAAW,CAAX,IAAW,CAAX,GAAoB,aAAa,CAAA,IAAA,EAAO,4BAAxC,KAAwC,CAAP,CAAjC;AACD;AACF;;AAED,MAAI,CAAJ,MAAA,EAAa;AACX,IAAA,WAAW,CAAX,MAAA,GAAqB,MAAM,IAAI,WAAW,CAArB,IAAA,IAA8B,WAAW,CAAX,OAAA,CAAnD,IAAA;AACD;;AAED,SAAA,WAAA;AACD;AAED;;;;;AAGA,IAAM,YAAY,GAAG,SAAf,YAAe,CAAA,IAAA,EAAA,KAAA,EAAwC;AAC3D,qCACgB,IADhB,qCAEoB,KAFpB,2CAGgB,KAHhB,8CAKgB,IALhB,gCAMS,KANT,0CAOe,KAPf;AADF,CAAA;AAYA;;;;;AAGA,IAAM,eAAe,GAAG,SAAlB,eAAkB,CAAA,IAAA,EAAA,OAAA,EAAA,KAAA,EAAyD;AAC/E,uBAAkB,OAAO,CAAP,KAAA,CAAA,MAAA,EAAlB,CAAkB,CAAlB;AAAA;AAAA,MAAM,IAAN;AAAA,MAAM,CAAN;;AACA,qCACgB,IADhB,cACwB,IADxB,cACgC,CADhC,qCAEoB,KAFpB,2CAGgB,KAHhB,8CAKgB,IALhB,0BAKoC,IALpC,cAK4C,CAL5C,0BAMS,KANT,0CAOe,KAPf;AAFF,CAAA;;AAaA,IAAM,oBAAoB,GAAG,SAAvB,oBAAuB,CAAA,IAAA;AAAA,MAAe,OAAf,uEAAA,MAAA;AAAA,uBAAmD,IAAnD,cAA7B,OAA6B;AAAA,CAA7B;;AAEA,IAAM,gBAAgB,GAAG,SAAnB,gBAAmB,CAAA,IAAA;AAAA,MAAe,OAAf,uEAAA,MAAA;AAAA,uBAAmD,oBAAoB,CAAA,IAAA,EAAhG,OAAgG,CAAvE;AAAA,CAAzB;;AAEM,SAAA,SAAA,CAAA,KAAA,EAA8D;AAAA,MAAd,MAAc,uEAA9D,KAA8D;;AAClE,MAAM,MAAN,GAAA,KAAA,CAAM,MAAN;AAAA,MAAmB,OAAnB,4BAAA,KAAA;;AACA,MAAM,MAAM,GAAG,MAAM,CAAN,IAAA,CAAf,OAAe,CAAf;AAEA,MAAI,CAAC,MAAM,CAAX,MAAA,EAAoB,OAAA,EAAA;AAEpB,MAAI,YAAY,GAAhB,EAAA;AACA,MAAI,GAAG,GAAP,EAAA;AAEA,MAAM,MAAM,GAAG,MAAM,GAAG,gBAAgB,CAAnB,QAAmB,CAAnB,GAArB,MAAA;AACA,EAAA,GAAG,wCAAH,MAAG,QAAH;AACA,EAAA,MAAM,KAAK,YAAY,gBAAS,oBAAoB,CAAA,QAAA,CAA7B,eAAvB,MAAuB,QAAjB,CAAN;;AAEA,OAAK,IAAI,CAAC,GAAV,CAAA,EAAgB,CAAC,GAAG,MAAM,CAA1B,MAAA,EAAmC,EAAnC,CAAA,EAAwC;AACtC,QAAM,IAAI,GAAG,MAAM,CAAnB,CAAmB,CAAnB;AACA,QAAM,KAAK,GAAG,KAAK,CAAnB,IAAmB,CAAnB;AAEA,IAAA,GAAG,IAAI,YAAY,CAAA,IAAA,EAAO,MAAM,GAAG,gBAAgB,CAAnB,IAAmB,CAAnB,GAA4B,KAAK,CAAjE,IAAmB,CAAnB;AACA,IAAA,MAAM,KAAK,YAAY,gBAAS,oBAAoB,CAAA,IAAA,CAA7B,eAAwC,KAAK,CAApE,IAAuB,QAAjB,CAAN;AAEA,QAAM,QAAQ,GAAG,mBAAjB,KAAiB,CAAjB;;AACA,SAAK,IAAI,GAAC,GAAV,CAAA,EAAgB,GAAC,GAAG,QAAQ,CAA5B,MAAA,EAAqC,EAArC,GAAA,EAA0C;AACxC,UAAM,QAAO,GAAG,QAAQ,CAAxB,GAAwB,CAAxB;AACA,UAAM,YAAY,GAAG,KAAK,CAA1B,QAA0B,CAA1B;AACA,UAAI,QAAO,KAAX,MAAA,EAAwB;AAExB,MAAA,GAAG,IAAI,eAAe,CAAA,IAAA,EAAA,QAAA,EAAgB,MAAM,GAAG,gBAAgB,CAAA,IAAA,EAAnB,QAAmB,CAAnB,GAA5C,YAAsB,CAAtB;AACA,MAAA,MAAM,KAAK,YAAY,gBAAS,oBAAoB,CAAA,IAAA,EAAA,QAAA,CAA7B,eAAvB,YAAuB,QAAjB,CAAN;AACD;AACF;;AAED,MAAA,MAAA,EAAY;AACV,IAAA,YAAY,sBAAZ,YAAY,UAAZ;AACD;;AAED,SAAO,YAAY,GAAnB,GAAA;AACD;;AAEK,SAAA,aAAA,CAAA,IAAA,EAAA,KAAA,EAAsD;AAC1D,MAAM,MAAM,GAA2B;AACrC,IAAA,IAAI,EAAE,0BAAQ,KAAR;AAD+B,GAAvC;;AAIA,OAAK,IAAI,CAAC,GAAV,CAAA,EAAgB,CAAC,GAAjB,CAAA,EAAuB,EAAvB,CAAA,EAA4B;AAC1B,IAAA,MAAM,kBAAN,CAAM,EAAN,GAAwB,0BAAS,OAAO,CAAA,KAAA,EAAxC,CAAwC,CAAhB,CAAxB;AACD;;AAED,OAAK,IAAI,GAAC,GAAV,CAAA,EAAgB,GAAC,IAAjB,CAAA,EAAwB,EAAxB,GAAA,EAA6B;AAC3B,IAAA,MAAM,iBAAN,GAAM,EAAN,GAAuB,0BAAS,MAAM,CAAA,KAAA,EAAtC,GAAsC,CAAf,CAAvB;AACD;;AAED,SAAA,MAAA;AACD;;AAEK,SAAA,OAAA,CAAA,KAAA,EAAA,MAAA,EAAkD;AACtD,MAAM,GAAG,GAAG,GAAG,CAAH,OAAA,CAAY,IAAI,CAAJ,KAAA,CAAxB,KAAwB,CAAZ,CAAZ;AACA,EAAA,GAAG,CAAH,CAAG,CAAH,GAAS,GAAG,CAAH,CAAG,CAAH,GAAS,MAAM,GAAxB,EAAA;AACA,SAAO,IAAI,CAAJ,OAAA,CAAa,GAAG,CAAH,KAAA,CAApB,GAAoB,CAAb,CAAP;AACD;;AAEK,SAAA,MAAA,CAAA,KAAA,EAAA,MAAA,EAAiD;AACrD,MAAM,GAAG,GAAG,GAAG,CAAH,OAAA,CAAY,IAAI,CAAJ,KAAA,CAAxB,KAAwB,CAAZ,CAAZ;AACA,EAAA,GAAG,CAAH,CAAG,CAAH,GAAS,GAAG,CAAH,CAAG,CAAH,GAAS,MAAM,GAAxB,EAAA;AACA,SAAO,IAAI,CAAJ,OAAA,CAAa,GAAG,CAAH,KAAA,CAApB,GAAoB,CAAb,CAAP;AACD","sourcesContent":["import { keys } from '../../util/helpers'\nimport { colorToInt, intToHex, colorToHex, ColorInt } from '../../util/colorUtils'\nimport * as sRGB from '../../util/color/transformSRGB'\nimport * as LAB from '../../util/color/transformCIELAB'\nimport {\n  VuetifyParsedTheme,\n  VuetifyThemeItem,\n} from 'vuetify/types/services/theme'\n\nexport function parse (\n  theme: Record<string, VuetifyThemeItem>,\n  isItem = false,\n  variations = true,\n): VuetifyParsedTheme {\n  const { anchor, ...variant } = theme\n  const colors = Object.keys(variant)\n  const parsedTheme: any = {}\n\n  for (let i = 0; i < colors.length; ++i) {\n    const name = colors[i]\n    const value = theme[name]\n\n    if (value == null) continue\n\n    if (!variations) {\n      parsedTheme[name] = { base: intToHex(colorToInt(value)) }\n    } else if (isItem) {\n      /* istanbul ignore else */\n      if (name === 'base' || name.startsWith('lighten') || name.startsWith('darken')) {\n        parsedTheme[name] = colorToHex(value)\n      }\n    } else if (typeof value === 'object') {\n      parsedTheme[name] = parse(value, true, variations)\n    } else {\n      parsedTheme[name] = genVariations(name, colorToInt(value))\n    }\n  }\n\n  if (!isItem) {\n    parsedTheme.anchor = anchor || parsedTheme.base || parsedTheme.primary.base\n  }\n\n  return parsedTheme\n}\n\n/**\n * Generate the CSS for a base color (.primary)\n */\nconst genBaseColor = (name: string, value: string): string => {\n  return `\n.v-application .${name} {\n  background-color: ${value} !important;\n  border-color: ${value} !important;\n}\n.v-application .${name}--text {\n  color: ${value} !important;\n  caret-color: ${value} !important;\n}`\n}\n\n/**\n * Generate the CSS for a variant color (.primary.darken-2)\n */\nconst genVariantColor = (name: string, variant: string, value: string): string => {\n  const [type, n] = variant.split(/(\\d)/, 2)\n  return `\n.v-application .${name}.${type}-${n} {\n  background-color: ${value} !important;\n  border-color: ${value} !important;\n}\n.v-application .${name}--text.text--${type}-${n} {\n  color: ${value} !important;\n  caret-color: ${value} !important;\n}`\n}\n\nconst genColorVariableName = (name: string, variant = 'base'): string => `--v-${name}-${variant}`\n\nconst genColorVariable = (name: string, variant = 'base'): string => `var(${genColorVariableName(name, variant)})`\n\nexport function genStyles (theme: VuetifyParsedTheme, cssVar = false): string {\n  const { anchor, ...variant } = theme\n  const colors = Object.keys(variant)\n\n  if (!colors.length) return ''\n\n  let variablesCss = ''\n  let css = ''\n\n  const aColor = cssVar ? genColorVariable('anchor') : anchor\n  css += `.v-application a { color: ${aColor}; }`\n  cssVar && (variablesCss += `  ${genColorVariableName('anchor')}: ${anchor};\\n`)\n\n  for (let i = 0; i < colors.length; ++i) {\n    const name = colors[i]\n    const value = theme[name]\n\n    css += genBaseColor(name, cssVar ? genColorVariable(name) : value.base)\n    cssVar && (variablesCss += `  ${genColorVariableName(name)}: ${value.base};\\n`)\n\n    const variants = keys(value)\n    for (let i = 0; i < variants.length; ++i) {\n      const variant = variants[i]\n      const variantValue = value[variant]\n      if (variant === 'base') continue\n\n      css += genVariantColor(name, variant, cssVar ? genColorVariable(name, variant) : variantValue)\n      cssVar && (variablesCss += `  ${genColorVariableName(name, variant)}: ${variantValue};\\n`)\n    }\n  }\n\n  if (cssVar) {\n    variablesCss = `:root {\\n${variablesCss}}\\n\\n`\n  }\n\n  return variablesCss + css\n}\n\nexport function genVariations (name: string, value: ColorInt): Record<string, string> {\n  const values: Record<string, string> = {\n    base: intToHex(value),\n  }\n\n  for (let i = 5; i > 0; --i) {\n    values[`lighten${i}`] = intToHex(lighten(value, i))\n  }\n\n  for (let i = 1; i <= 4; ++i) {\n    values[`darken${i}`] = intToHex(darken(value, i))\n  }\n\n  return values\n}\n\nexport function lighten (value: ColorInt, amount: number): ColorInt {\n  const lab = LAB.fromXYZ(sRGB.toXYZ(value))\n  lab[0] = lab[0] + amount * 10\n  return sRGB.fromXYZ(LAB.toXYZ(lab))\n}\n\nexport function darken (value: ColorInt, amount: number): ColorInt {\n  const lab = LAB.fromXYZ(sRGB.toXYZ(value))\n  lab[0] = lab[0] - amount * 10\n  return sRGB.fromXYZ(LAB.toXYZ(lab))\n}\n"],"sourceRoot":""}]}