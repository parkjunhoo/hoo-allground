{"remainingRequest":"C:\\Users\\lol\\Desktop\\myproject\\server\\allground\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\lol\\Desktop\\myproject\\server\\allground\\src\\views\\test.vue?vue&type=style&index=0&id=5752faac&scoped=true&lang=css&","dependencies":[{"path":"C:\\Users\\lol\\Desktop\\myproject\\server\\allground\\src\\views\\test.vue","mtime":1621583221744},{"path":"C:\\Users\\lol\\Desktop\\myproject\\server\\allground\\node_modules\\css-loader\\dist\\cjs.js","mtime":1617667260694},{"path":"C:\\Users\\lol\\Desktop\\myproject\\server\\allground\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1617667260958},{"path":"C:\\Users\\lol\\Desktop\\myproject\\server\\allground\\node_modules\\postcss-loader\\src\\index.js","mtime":1617667260946},{"path":"C:\\Users\\lol\\Desktop\\myproject\\server\\allground\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1617667255123},{"path":"C:\\Users\\lol\\Desktop\\myproject\\server\\allground\\node_modules\\vue-loader\\lib\\index.js","mtime":1617667260958}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg0KLmJhY2t7DQogIC8qIGJhY2tncm91bmQ6IHVybCgiLi4vYXNzZXRzL2FpYmFja2dyb3VuZC5wbmciKTsgKi8NCiAgaGVpZ2h0OiAxMDB2aA0KfQ0K"},{"version":3,"sources":["test.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6HA;AACA;AACA;AACA","file":"test.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n  <v-container fluid>\r\n    <v-row class=\"back\"\r\n    align=\"center\" justify=\"center\">\r\n      <v-col\r\n      align=\"center\">\r\n             <p\r\n             style=\"color:white;\"\r\n              solo\r\n              ref=\"inputRef\"\r\n              label=\"설명\"\r\n            >{{text[number]}}</p>\r\n            <v-btn @click=\"tts\">start</v-btn>\r\n      </v-col>\r\n    </v-row>\r\n  </v-container>\r\n</template>\r\n\r\n<script>\r\n\r\nimport bus from'@/utils/bus'\r\nexport default {\r\n    name: 'About',\r\n    data(){\r\n      return{\r\n          voices:[],\r\n          text :[\r\n            \",온라인, ai 면접을 진행하기 위해, 응시환경 체크를 시작하겠습니다\",\r\n            \"응시 중 발생하는 , 예상치 못한 문제에, 대처하기 위해, 응시 전, 반드시 화면 우측 상단에 위치한, 문제해결가이드를, 확인해주세요.\"\r\n          ],\r\n          number: 0,\r\n          voiceFound: false,\r\n          utterThis : {}\r\n    \r\n      }\r\n    },\r\n    components: {\r\n    \r\n    },\r\n\r\n  \r\n\r\n    methods:{\r\n      setVoiceList() {\r\n      this.voices = window.speechSynthesis.getVoices();\r\n      console.log(this.voices)\r\n\r\n      if (window.speechSynthesis.onvoiceschanged !== undefined) {\r\n        window.speechSynthesis.onvoiceschanged = this.setVoiceList;\r\n      }\r\n    },\r\n\r\n    speech(text){\r\n      if(!window.speechSynthesis) {\r\n        alert(\"음성 재생을 지원하지 않는 브라우저입니다. 크롬, 파이어폭스 등의 최신 브라우저를 이용하세요\");\r\n        return;\r\n      }\r\n\r\n      var lang= 'ko-KR'\r\n      this.utterThis= new SpeechSynthesisUtterance(text);\r\n      this.utterThis.onstart = (event) => {\r\n        console.log('onstart', event);\r\n        //console.log(this.$store.state.number)\r\n        //this.$ref.changeText.$val= event.currentTarget.text\r\n        console.log(this.number,'요거임')\r\n        //this.$refs.inputRef.$el.value = event.currentTarget.text\r\n      \r\n\r\n\r\n      }\r\n    \r\n     this.utterThis.onend = function(event){\r\n        console.log('onend', event);\r\n        //console.log(event.currentTarget.text)\r\n        \r\n        \r\n      }\r\n\r\n      this.utterThis.onerror = function(event) {\r\n        console.log('error', event);\r\n      }\r\n\r\n\r\n      this.voiceFound=false\r\n      for(var i = 0; i < this.voices.length ; i++) {\r\n        if(this.voices[i].lang.indexOf(lang) >= 0 || this.voices[i].lang.indexOf(lang.replace('-', '_')) >= 0) {\r\n        this.utterThis.voice = this.voices[i];\r\n        this.voiceFound = true;\r\n        }\r\n      }\r\n        if(!this.voiceFound) {\r\n          alert('voice not found');\r\n        return;\r\n        }\r\n        this.utterThis.lang = lang;\r\n        this.utterThis.pitch = 0.3;\r\n        this.utterThis.rate = 1.3; //속도\r\n        window.speechSynthesis.speak(this.utterThis);\r\n      },\r\n   \r\n    tts(){\r\n      for(var i=0; i< this.text.length; i++){   \r\n        \r\n          this.speech(this.text[i]);\r\n          console.log(this.number)\r\n      }\r\n      \r\n    },\r\n\r\n  },\r\n\r\n    mounted(){\r\n      this.setVoiceList();\r\n         this.$nextTick(()=>{\r\n      setTimeout( ()=>{bus.$emit('end:loading')},0 ); // 로딩이 끝났다는걸 알려주기위한 마운트 된 후 비동기처리 셋타이머 ms인자 500때문에 기본딜레이 500잇음 0하면 페이지 마운트후 로딩) //\r\n    });\r\n    },\r\n}\r\n  \r\n\r\n\r\n\r\n</script>\r\n\r\n<style scoped>\r\n.back{\r\n  /* background: url(\"../assets/aibackground.png\"); */\r\n  height: 100vh\r\n}\r\n</style>"]}]}