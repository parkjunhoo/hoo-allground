{"remainingRequest":"C:\\Users\\lol\\Desktop\\myproject\\server\\allground\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\lol\\Desktop\\myproject\\server\\allground\\src\\components\\TipTap\\MenuBar.vue?vue&type=style&index=0&id=4d3828d4&lang=scss&scoped=true&","dependencies":[{"path":"C:\\Users\\lol\\Desktop\\myproject\\server\\allground\\src\\components\\TipTap\\MenuBar.vue","mtime":1621516392691},{"path":"C:\\Users\\lol\\Desktop\\myproject\\server\\allground\\node_modules\\css-loader\\dist\\cjs.js","mtime":1617667260694},{"path":"C:\\Users\\lol\\Desktop\\myproject\\server\\allground\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1617667260958},{"path":"C:\\Users\\lol\\Desktop\\myproject\\server\\allground\\node_modules\\postcss-loader\\src\\index.js","mtime":1617667260946},{"path":"C:\\Users\\lol\\Desktop\\myproject\\server\\allground\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1620819803104},{"path":"C:\\Users\\lol\\Desktop\\myproject\\server\\allground\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1617667255123},{"path":"C:\\Users\\lol\\Desktop\\myproject\\server\\allground\\node_modules\\vue-loader\\lib\\index.js","mtime":1617667260958}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoNCi5kaXZpZGVyIHsNCiAgd2lkdGg6IDJweDsNCiAgaGVpZ2h0OiAxLjI1cmVtOw0KICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKGJsYWNrLCAwLjEpOw0KICBtYXJnaW4tbGVmdDogMC41cmVtOw0KICBtYXJnaW4tcmlnaHQ6IDAuNzVyZW07DQp9DQo="},{"version":3,"sources":["MenuBar.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2KA;AACA;AACA;AACA;AACA;AACA;AACA","file":"MenuBar.vue","sourceRoot":"src/components/TipTap","sourcesContent":["<template>\r\n  <div>\r\n    <template v-for=\"(item, index) in items\">\r\n      <div class=\"divider\" v-if=\"item.type === 'divider'\" :key=\"index\" />\r\n      <menu-item v-else :key=\"index\" v-bind=\"item\" />\r\n    </template>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport MenuItem from './MenuItem.vue'\r\n\r\nexport default {\r\n  components: {\r\n    MenuItem,\r\n  },\r\n\r\n  props: {\r\n    editor: {\r\n      type: Object,\r\n      required: true,\r\n    },\r\n  },\r\n\r\n  data() {\r\n    return {\r\n      items: [\r\n        {\r\n          icon: 'bold',\r\n          title: 'Bold',\r\n          action: () => this.editor.chain().focus().toggleBold().run(),\r\n          isActive: () => this.editor.isActive('bold'),\r\n        },\r\n        {\r\n          icon: 'italic',\r\n          title: 'Italic',\r\n          action: () => this.editor.chain().focus().toggleItalic().run(),\r\n          isActive: () => this.editor.isActive('italic'),\r\n        },\r\n        {\r\n          icon: 'strikethrough',\r\n          title: 'Strike',\r\n          action: () => this.editor.chain().focus().toggleStrike().run(),\r\n          isActive: () => this.editor.isActive('strike'),\r\n        },\r\n        {\r\n          icon: 'code-view',\r\n          title: 'Code',\r\n          action: () => this.editor.chain().focus().toggleCode().run(),\r\n          isActive: () => this.editor.isActive('code'),\r\n        },\r\n        {\r\n          icon: 'mark-pen-line',\r\n          title: 'Highlight',\r\n          action: () => this.editor.chain().focus().toggleHighlight().run(),\r\n          isActive: () => this.editor.isActive('highlight'),\r\n        },\r\n        {\r\n          type: 'divider',\r\n        },\r\n        {\r\n          icon: 'align-left',\r\n          title: 'left',\r\n          action: () => this.editor.chain().focus().setTextAlign('left').run(),\r\n          isActive: () => this.editor.isActive({ textAlign: 'left' }),\r\n        },\r\n        {\r\n          icon: 'align-center',\r\n          title: 'center',\r\n          action: () => this.editor.chain().focus().setTextAlign('center').run(),\r\n          isActive: () => this.editor.isActive({ textAlign: 'center' }),\r\n        },\r\n        {\r\n          icon: 'align-right',\r\n          title: 'right',\r\n          action: () => this.editor.chain().focus().setTextAlign('right').run(),\r\n          isActive: () => this.editor.isActive({ textAlign: 'right' }),\r\n        },\r\n        {\r\n          icon: 'h-1',\r\n          title: 'Heading 1',\r\n          action: () => this.editor.chain().focus().toggleHeading({ level: 1 }).run(),\r\n          isActive: () => this.editor.isActive('heading', { level: 1 }),\r\n        },\r\n        {\r\n          icon: 'h-2',\r\n          title: 'Heading 2',\r\n          action: () => this.editor.chain().focus().toggleHeading({ level: 2 }).run(),\r\n          isActive: () => this.editor.isActive('heading', { level: 2 }),\r\n        },\r\n        {\r\n          icon: 'paragraph',\r\n          title: 'Paragraph',\r\n          action: () => this.editor.chain().focus().setParagraph().run(),\r\n          isActive: () => this.editor.isActive('paragraph'),\r\n        },\r\n        {\r\n          icon: 'list-unordered',\r\n          title: 'Bullet List',\r\n          action: () => this.editor.chain().focus().toggleBulletList().run(),\r\n          isActive: () => this.editor.isActive('bulletList'),\r\n        },\r\n        {\r\n          icon: 'list-ordered',\r\n          title: 'Ordered List',\r\n          action: () => this.editor.chain().focus().toggleOrderedList().run(),\r\n          isActive: () => this.editor.isActive('orderedList'),\r\n        },\r\n        {\r\n          icon: 'list-check-2',\r\n          title: 'Task List',\r\n          action: () => this.editor.chain().focus().toggleTaskList().run(),\r\n          isActive: () => this.editor.isActive('taskList'),\r\n        },\r\n        {\r\n          icon: 'code-box-line',\r\n          title: 'Code Block',\r\n          action: () => this.editor.chain().focus().toggleCodeBlock().run(),\r\n          isActive: () => this.editor.isActive('codeBlock'),\r\n        },\r\n        {\r\n          type: 'divider',\r\n        },\r\n        {\r\n          icon: 'double-quotes-l',\r\n          title: 'Blockquote',\r\n          action: () => this.editor.chain().focus().toggleBlockquote().run(),\r\n          isActive: () => this.editor.isActive('blockquote'),\r\n        },\r\n        {\r\n          icon: 'separator',\r\n          title: 'Horizontal Rule',\r\n          action: () => this.editor.chain().focus().setHorizontalRule().run(),\r\n        },\r\n        {\r\n          type: 'divider',\r\n        },\r\n        {\r\n          icon: 'text-wrap',\r\n          title: 'Hard Break',\r\n          action: () => this.editor.chain().focus().setHardBreak().run(),\r\n        },\r\n        {\r\n          icon: 'format-clear',\r\n          title: 'Clear Format',\r\n          action: () => this.editor.chain()\r\n            .focus()\r\n            .clearNodes()\r\n            .unsetAllMarks()\r\n            .run(),\r\n        },\r\n        {\r\n          type: 'divider',\r\n        },\r\n        {\r\n          icon: 'arrow-go-back-line',\r\n          title: 'Undo',\r\n          action: () => this.editor.chain().focus().undo().run(),\r\n        },\r\n        {\r\n          icon: 'arrow-go-forward-line',\r\n          title: 'Redo',\r\n          action: () => this.editor.chain().focus().redo().run(),\r\n        },\r\n      ],\r\n    }\r\n  },\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.divider {\r\n  width: 2px;\r\n  height: 1.25rem;\r\n  background-color: rgba(black, 0.1);\r\n  margin-left: 0.5rem;\r\n  margin-right: 0.75rem;\r\n}\r\n</style>\r\n"]}]}