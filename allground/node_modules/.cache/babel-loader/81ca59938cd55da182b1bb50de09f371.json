{"remainingRequest":"C:\\Users\\lol\\Desktop\\server\\allground\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\lol\\Desktop\\server\\allground\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\lol\\Desktop\\server\\allground\\node_modules\\vuetify\\lib\\services\\theme\\index.js","dependencies":[{"path":"C:\\Users\\lol\\Desktop\\server\\allground\\node_modules\\vuetify\\lib\\services\\theme\\index.js","mtime":1619014118507},{"path":"C:\\Users\\lol\\Desktop\\server\\allground\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1617667255123},{"path":"C:\\Users\\lol\\Desktop\\server\\allground\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1617667255123},{"path":"C:\\Users\\lol\\Desktop\\server\\allground\\node_modules\\babel-loader\\lib\\index.js","mtime":1617667255120}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["../../../src/services/theme/index.ts"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable no-multi-spaces */\n// Extensions\nimport { Service } from '../service'\n\n// Utilities\nimport * as ThemeUtils from './utils'\nimport { getNestedValue } from '../../util/helpers'\n\n// Types\nimport Vue from 'vue'\nimport { VuetifyPreset } from 'vuetify/types/services/presets'\nimport {\n  VuetifyParsedTheme,\n  VuetifyThemes,\n  VuetifyThemeVariant,\n  Theme as ITheme,\n} from 'vuetify/types/services/theme'\n\nexport class Theme extends Service {\n  static property: 'theme' = 'theme'\n\n  public disabled = false\n\n  public options: ITheme['options']\n\n  public styleEl?: HTMLStyleElement\n\n  public themes: VuetifyThemes\n\n  public defaults: VuetifyThemes\n\n  private isDark = null as boolean | null\n\n  private unwatch = null as (() => void) | null\n\n  private vueMeta = null as any | null\n\n  constructor (preset: VuetifyPreset) {\n    super()\n\n    const {\n      dark,\n      disable,\n      options,\n      themes,\n    } = preset[Theme.property]\n\n    this.dark = Boolean(dark)\n    this.defaults = this.themes = themes\n    this.options = options\n\n    if (disable) {\n      this.disabled = true\n\n      return\n    }\n\n    this.themes = {\n      dark: this.fillVariant(themes.dark, true),\n      light: this.fillVariant(themes.light, false),\n    }\n  }\n\n  // When setting css, check for element and apply new values\n  /* eslint-disable-next-line accessor-pairs */\n  set css (val: string) {\n    if (this.vueMeta) {\n      if (this.isVueMeta23) {\n        this.applyVueMeta23()\n      }\n      return\n    }\n    this.checkOrCreateStyleElement() && (this.styleEl!.innerHTML = val)\n  }\n\n  set dark (val: boolean) {\n    const oldDark = this.isDark\n\n    this.isDark = val\n    // Only apply theme after dark\n    // has already been set before\n    oldDark != null && this.applyTheme()\n  }\n\n  get dark () {\n    return Boolean(this.isDark)\n  }\n\n  // Apply current theme default\n  // only called on client side\n  public applyTheme (): void {\n    if (this.disabled) return this.clearCss()\n\n    this.css = this.generatedStyles\n  }\n\n  public clearCss (): void {\n    this.css = ''\n  }\n\n  // Initialize theme for SSR and SPA\n  // Attach to ssrContext head or\n  // apply new theme to document\n  public init (root: Vue, ssrContext?: any): void {\n    if (this.disabled) return\n\n    /* istanbul ignore else */\n    if ((root as any).$meta) {\n      this.initVueMeta(root)\n    } else if (ssrContext) {\n      this.initSSR(ssrContext)\n    }\n\n    this.initTheme(root)\n  }\n\n  // Allows for you to set target theme\n  public setTheme (theme: 'light' | 'dark', value: object) {\n    this.themes[theme] = Object.assign(this.themes[theme], value)\n    this.applyTheme()\n  }\n\n  // Reset theme defaults\n  public resetThemes () {\n    this.themes.light = Object.assign({}, this.defaults.light)\n    this.themes.dark = Object.assign({}, this.defaults.dark)\n    this.applyTheme()\n  }\n\n  // Check for existence of style element\n  private checkOrCreateStyleElement (): boolean {\n    this.styleEl = document.getElementById('vuetify-theme-stylesheet') as HTMLStyleElement\n\n    /* istanbul ignore next */\n    if (this.styleEl) return true\n\n    this.genStyleElement() // If doesn't have it, create it\n\n    return Boolean(this.styleEl)\n  }\n\n  private fillVariant (\n    theme: Partial<VuetifyThemeVariant> = {},\n    dark: boolean\n  ): VuetifyThemeVariant {\n    const defaultTheme = this.themes[dark ? 'dark' : 'light']\n\n    return Object.assign({},\n      defaultTheme,\n      theme\n    )\n  }\n\n  // Generate the style element\n  // if applicable\n  private genStyleElement (): void {\n    /* istanbul ignore if */\n    if (typeof document === 'undefined') return\n\n    /* istanbul ignore next */\n    this.styleEl = document.createElement('style')\n    this.styleEl.type = 'text/css'\n    this.styleEl.id = 'vuetify-theme-stylesheet'\n\n    if (this.options.cspNonce) {\n      this.styleEl.setAttribute('nonce', this.options.cspNonce)\n    }\n\n    document.head.appendChild(this.styleEl)\n  }\n\n  private initVueMeta (root: any) {\n    this.vueMeta = root.$meta()\n    if (this.isVueMeta23) {\n      // vue-meta needs to apply after mounted()\n      root.$nextTick(() => {\n        this.applyVueMeta23()\n      })\n      return\n    }\n\n    const metaKeyName = typeof this.vueMeta.getOptions === 'function' ? this.vueMeta.getOptions().keyName : 'metaInfo'\n    const metaInfo = root.$options[metaKeyName] || {}\n\n    root.$options[metaKeyName] = () => {\n      metaInfo.style = metaInfo.style || []\n\n      const vuetifyStylesheet = metaInfo.style.find((s: any) => s.id === 'vuetify-theme-stylesheet')\n\n      if (!vuetifyStylesheet) {\n        metaInfo.style.push({\n          cssText: this.generatedStyles,\n          type: 'text/css',\n          id: 'vuetify-theme-stylesheet',\n          nonce: (this.options || {}).cspNonce,\n        })\n      } else {\n        vuetifyStylesheet.cssText = this.generatedStyles\n      }\n\n      return metaInfo\n    }\n  }\n\n  private applyVueMeta23 () {\n    const { set } = this.vueMeta.addApp('vuetify')\n\n    set({\n      style: [{\n        cssText: this.generatedStyles,\n        type: 'text/css',\n        id: 'vuetify-theme-stylesheet',\n        nonce: this.options.cspNonce,\n      }],\n    })\n  }\n\n  private initSSR (ssrContext?: any) {\n    // SSR\n    const nonce = this.options.cspNonce ? ` nonce=\"${this.options.cspNonce}\"` : ''\n    ssrContext.head = ssrContext.head || ''\n    ssrContext.head += `<style type=\"text/css\" id=\"vuetify-theme-stylesheet\"${nonce}>${this.generatedStyles}</style>`\n  }\n\n  private initTheme (root: Vue) {\n    // Only watch for reactivity on client side\n    if (typeof document === 'undefined') return\n\n    // If we get here somehow, ensure\n    // existing instance is removed\n    if (this.unwatch) {\n      this.unwatch()\n      this.unwatch = null\n    }\n\n    // TODO: Update to use RFC if merged\n    // https://github.com/vuejs/rfcs/blob/advanced-reactivity-api/active-rfcs/0000-advanced-reactivity-api.md\n    root.$once('hook:created', () => {\n      const obs = Vue.observable({ themes: this.themes })\n      this.unwatch = root.$watch(() => obs.themes, () => this.applyTheme(), { deep: true })\n    })\n    this.applyTheme()\n  }\n\n  get currentTheme () {\n    const target = this.dark ? 'dark' : 'light'\n\n    return this.themes[target]\n  }\n\n  get generatedStyles (): string {\n    const theme = this.parsedTheme\n    /* istanbul ignore next */\n    const options = this.options || {}\n    let css\n\n    if (options.themeCache != null) {\n      css = options.themeCache.get(theme)\n      /* istanbul ignore if */\n      if (css != null) return css\n    }\n\n    css = ThemeUtils.genStyles(theme, options.customProperties)\n\n    if (options.minifyTheme != null) {\n      css = options.minifyTheme(css)\n    }\n\n    if (options.themeCache != null) {\n      options.themeCache.set(theme, css)\n    }\n\n    return css\n  }\n\n  get parsedTheme (): VuetifyParsedTheme {\n    return ThemeUtils.parse(\n      this.currentTheme || {},\n      undefined,\n      getNestedValue(this.options, ['variations'], true)\n    )\n  }\n\n  // Is using v2.3 of vue-meta\n  // https://github.com/nuxt/vue-meta/releases/tag/v2.3.0\n  private get isVueMeta23 (): boolean {\n    return typeof this.vueMeta.addApp === 'function'\n  }\n}\n"],"sourceRoot":""}]}